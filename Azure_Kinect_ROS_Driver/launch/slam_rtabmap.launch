<!--
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.
-->

<launch>

  <param name="robot_description"
    command="xacro $(find my_robot_description)/urdf/mecanum_robot.urdf.xacro" />

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Start the K4A sensor driver -->
  <group ns="k4a">
    <node pkg="nodelet" type="nodelet" name="manager" args="manager" output="screen">
      <param name="num_worker_threads" value="16" />
    </node>

    <node pkg="nodelet" type="nodelet" name="rectify_rgb"
          args="load image_proc/rectify manager --no-bond" respawn="true">
      <remap from="image_mono"  to="k4a/rgb_to_depth/image_raw" />
      <remap from="image_rect"  to="k4a/rgb_to_depth/image_rect" />
    </node>

    <node pkg="nodelet" type="nodelet" name="rectify_depth"
          args="load image_proc/rectify manager --no-bond" respawn="true">
      <remap from="image_mono"  to="k4a/depth/image_raw" />
      <remap from="image_rect"  to="k4a/depth/image_rect" />
    </node>

    <node pkg="nodelet" type="nodelet" name="k4a_ros_bridge"
          args="load Azure_Kinect_ROS_Driver/K4AROSBridgeNodelet manager --no-bond"
          respawn="true">
      <param name="depth_enabled"     value="true" />
      <param name="depth_mode"        value="NFOV_UNBINNED" />
      <param name="color_enabled"     value="true" />
      <param name="color_resolution"  value="720P" />
      <param name="fps"               value="5" />
      <param name="point_cloud"       value="false" />
      <param name="rgb_point_cloud"   value="false" />
      <param name="required"          value="true" />
      <param name="imu_rate_target"   value="100" />
    </node>
  </group>

  <node pkg="depth_movement" type="resize_depth.py" name="resize_depth" output="screen">
    <param name="~delay" value="3.0" />
    <remap from="depth/image_resized" to="/k4a/depth/image_resized" />
  </node>

  <node pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync" output="screen">
    <remap from="rgb/image"         to="/k4a/rgb/image_raw"/>
    <remap from="depth/image"       to="/k4a/depth/image_resized"/>
    <remap from="rgb/camera_info"   to="/k4a/rgb/camera_info"/>
    <remap from="depth/camera_info" to="/k4a/depth/camera_info"/>
    <param name="approx_sync"       value="true"/>
    <param name="queue_size"        value="20"/>
  </node>

  <include file="$(find rplidar_ros)/launch/view_rplidar_s2.launch"/>

  <include file="$(find rtabmap_ros)/launch/rtabmap.launch" ns="rtabmap">
    <param name="subscribe_rgbd" type="bool" value="true"/>
    <param name="subscribe_scan" type="bool" value="true"/>
    <param name="scan_topic" type="string" value="/scan"/>
    <param name="frame_id" type="string" value="camera_link"/>
    <param name="map_frame_id" type="string" value="map"/>
    <param name="odom_frame_id" type="string" value="odom"/>
    <param name="publish_tf" type="bool" value="true"/>
    <param name="wait_for_transform_duration" type="double" value="0.3"/>
    <param name="delete_db_on_start" type="bool" value="false"/>
    <param name="Odom/ResetCountdown" type="int" value="2"/>
    <param name="approx_sync" type="bool" value="true"/>
    <remap from="rgbd_image" to="/rgbd_sync/rgbd_image"/>
  </include>

  <!-- Static Transforms -->

  <!-- base_footprint → camera_base (altura total del conjunto) -->
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_camera_base"
        args="0 0 0.16 0 0 0 base_footprint camera_base 100"/>

  <!-- camera_base → camera_link (mismo punto, sin desplazamiento) -->
  <node pkg="tf" type="static_transform_publisher" name="camera_base_to_camera_link"
        args="0 0 0 0 0 0 camera_base camera_link 100"/>

  <!-- camera_link → laser (10 cm encima de la cámara) -->
  <node pkg="tf" type="static_transform_publisher" name="camera_link_to_laser"
        args="0 0 0 0 0 0 camera_link laser 100"/>

  <!-- map → odom (estático para iniciar sin odometría externa) -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom_transform"
        args="0 0 0 0 0 0 map odom 100"/>

</launch>
